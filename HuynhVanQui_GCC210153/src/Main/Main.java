/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import Lib.XFile;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MY LAPTOP
 */
public class Main extends javax.swing.JFrame {

    CardLayout cardLayout;
    DefaultTableModel tbModel;
    DefaultTableModel tbHisModel;

//    DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
    String filePath = "";
    String hisFilePath = "";
    ArrayList<Fruit> fruitsList;
    ArrayList<History> historyList;
    int currentRow = -1;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        initTable();
        tbFruits.setDefaultEditor(Object.class, null);
        tbHistory.setDefaultEditor(Object.class, null);

        filePath = "./src/Lib/Fruit.dat";
        hisFilePath = "./src/Lib/History.dat";

        cardLayout = (CardLayout) containPanel.getLayout();

        fruitsList = new ArrayList<>();
        historyList = new ArrayList<>();

        loadFileHistoty();
        loadFile();
        fillToTable();

        txtOPrice.setEnabled(false);
        txtSellingPrice.setEnabled(false);
        txtOTotal.setEditable(false);
        this.setLocationRelativeTo(null);

    }

    private void saveFile() {
        XFile.writeObject(filePath, fruitsList);

    }

    private void saveFileHistory() {
        XFile.writeObject(hisFilePath, historyList);

    }

    private void fillToTable() {
        tbModel.setRowCount(0);
        for (Fruit f : fruitsList) {
            Object[] row = new Object[]{f.getName(), f.getQuantity(), f.getInPrice(), f.getOutPrice()};
            tbModel.addRow(row);
        }

        tbHisModel.setRowCount(0);
        for (History h : historyList) {
            Object[] row = new Object[]{h.getID(), h.getName(), h.getQuantity(), h.getTotal(), h.getStatus(), h.getDate()};
            tbHisModel.addRow(row);
        }
    }

    private boolean loadFile() {

        if (XFile.readObject(filePath) == null) {
            return false;
        }
        fruitsList = (ArrayList<Fruit>) XFile.readObject(filePath);

        return true;
    }

    private void loadFileHistoty() {

        if (XFile.readObject(hisFilePath) == null) {
            saveFileHistory();
        }
        historyList = (ArrayList<History>) XFile.readObject(hisFilePath);

    }

    private void initTable() {
        String[] columnName = {"Name", "Quantity", "Price In", "Price Out"};
        tbModel = new DefaultTableModel(columnName, 0);
        tbFruits.setModel(tbModel);

        String[] hisColName = {"ID", "Fruit", "Quantity", "Total", "Status", "Date"};
        tbHisModel = new DefaultTableModel(hisColName, 0);
        tbHistory.setModel(tbHisModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbFruits = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        containPanel = new javax.swing.JPanel();
        in = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIQuantity = new javax.swing.JTextField();
        txtIPrice = new javax.swing.JTextField();
        txtITotal = new javax.swing.JTextField();
        btnIData = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtSellingPrice = new javax.swing.JTextField();
        txtIName = new javax.swing.JTextField();
        btnIClrear = new javax.swing.JButton();
        out = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtOQuantity = new javax.swing.JTextField();
        txtOPrice = new javax.swing.JTextField();
        txtOTotal = new javax.swing.JTextField();
        btnOData = new javax.swing.JButton();
        txtOName = new javax.swing.JTextField();
        btnOClear = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnIn = new javax.swing.JButton();
        btnOut = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbHistory = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setText("Q Fruits");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(565, 565, 565))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 255, 204));

        tbFruits.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbFruits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbFruitsMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbFruits);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Stored fruits");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jLabel12)
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        containPanel.setLayout(new java.awt.CardLayout());

        in.setBackground(new java.awt.Color(153, 255, 255));

        jLabel4.setText("Total price");

        jLabel3.setText("Price per kg");

        jLabel2.setText("Quantity:");

        jLabel5.setText("Fruit");

        txtITotal.setEnabled(false);

        btnIData.setText("Input");
        btnIData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIDataActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel11.setText("Selling price");

        btnIClrear.setText("Clear");
        btnIClrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIClrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inLayout = new javax.swing.GroupLayout(in);
        in.setLayout(inLayout);
        inLayout.setHorizontalGroup(
            inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(inLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(inLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addComponent(btnIData, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnIClrear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(inLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(txtITotal))))
                    .addGroup(inLayout.createSequentialGroup()
                        .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11))
                        .addGap(20, 20, 20)
                        .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSellingPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                            .addComponent(txtIName)
                            .addComponent(txtIQuantity)
                            .addComponent(txtIPrice))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        inLayout.setVerticalGroup(
            inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inLayout.createSequentialGroup()
                        .addComponent(txtIName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtSellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtITotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIData, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIClrear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(214, Short.MAX_VALUE))
        );

        containPanel.add(in, "in");

        out.setBackground(new java.awt.Color(153, 255, 255));

        jLabel7.setText("Total price");

        jLabel8.setText("Price per kg");

        jLabel9.setText("Quantity:");

        jLabel10.setText("Fruit");

        btnOData.setText("Checkout");
        btnOData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnODataActionPerformed(evt);
            }
        });

        btnOClear.setText("Clear");
        btnOClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout outLayout = new javax.swing.GroupLayout(out);
        out.setLayout(outLayout);
        outLayout.setHorizontalGroup(
            outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(outLayout.createSequentialGroup()
                        .addComponent(btnOData, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOClear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtOTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addComponent(txtOPrice)
                    .addComponent(txtOQuantity)
                    .addComponent(txtOName))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        outLayout.setVerticalGroup(
            outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(outLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOData, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOClear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(228, Short.MAX_VALUE))
        );

        containPanel.add(out, "out");

        jPanel4.setBackground(new java.awt.Color(153, 204, 255));

        btnIn.setBackground(new java.awt.Color(0, 255, 255));
        btnIn.setText("Input");
        btnIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });

        btnOut.setBackground(new java.awt.Color(51, 51, 51));
        btnOut.setForeground(new java.awt.Color(255, 255, 255));
        btnOut.setText("Output");
        btnOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(51, 255, 255));
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(btnIn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(btnOut, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOut, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        tbHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tbHistory);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Transaction history");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(containPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(containPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed
        // TODO add your handling code here:
        cardLayout.show(containPanel, "in");
        btnIn.setBackground(Color.CYAN);
        btnOut.setBackground(Color.DARK_GRAY);
        btnOut.setForeground(Color.WHITE);
        btnIn.setForeground(Color.BLACK);

    }//GEN-LAST:event_btnInActionPerformed

    private void btnOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutActionPerformed
        // TODO add your handling code here:
        cardLayout.show(containPanel, "out");
        btnOut.setBackground(Color.CYAN);
        btnIn.setBackground(Color.DARK_GRAY);
        btnOut.setForeground(Color.BLACK);
        btnIn.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnOutActionPerformed

    private void btnIDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIDataActionPerformed
        // TODO add your handling code here:

        try {
            txtIName.setText(txtIName.getText().toLowerCase());
            checkPrice(true);
            addFruit();
            addHistory(true);
            fillToTable();
            saveFile();
            saveFileHistory();
        } catch (NumberFormatException e) {
            showMess("Price and Quantity must be a number");
        }
    }//GEN-LAST:event_btnIDataActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            updatePrice();
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Choose fruit to update price!!");
        }

        fillToTable();
        saveFile();
        txtSellingPrice.enable(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tbFruitsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbFruitsMousePressed
        // TODO add your handling code here:
        txtSellingPrice.enable(true);
        currentRow = tbFruits.getSelectedRow();
        cardLayout.show(containPanel, "in");
        btnIn.setBackground(Color.CYAN);
        btnOut.setBackground(Color.DARK_GRAY);
        btnIn.setForeground(Color.BLACK);
        showDetail(currentRow);
    }//GEN-LAST:event_tbFruitsMousePressed

    private void btnODataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnODataActionPerformed
        // TODO add your handling code here:
        try {
            txtOName.setText(txtOName.getText().toLowerCase());
            checkPrice(false);
            addHistory(false);
            fillToTable();
            saveFile();
            saveFileHistory();
        } catch (NumberFormatException e) {
            showMess("Quantity must be a number");
        }


    }//GEN-LAST:event_btnODataActionPerformed

    private void btnIClrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIClrearActionPerformed
        // TODO add your handling code here:
        clear(true);
    }//GEN-LAST:event_btnIClrearActionPerformed

    private void btnOClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOClearActionPerformed
        // TODO add your handling code here:
        clear(false);
    }//GEN-LAST:event_btnOClearActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        try {
            delete();
        } catch (IndexOutOfBoundsException e) {
            showMess("Choose fruit to delete!!");
        }

        fillToTable();
        saveFile();
    }//GEN-LAST:event_btnDelActionPerformed

    private void clear(boolean b) {
        if (b) {
            txtIName.setText("");
            txtIPrice.setText("");
            txtIQuantity.setText("");
            txtITotal.setText("");
            txtSellingPrice.setText("");
        } else {
            txtOName.setText("");
            txtOPrice.setText("");
            txtOQuantity.setText("");
            txtOTotal.setText("");
        }
    }

    private void checkPrice(boolean c) {
        if (c) {
            String price = txtIPrice.getText();
            for (int i = 0; i < price.length(); i++) {
                boolean check = Character.isDigit(price.charAt(i));
                if (!check) {
                    showMess("Price must be a number and greater than 0!!!");
                    break;
                }
            }

            String quan = txtIQuantity.getText();
            for (int i = 0; i < quan.length(); i++) {
                boolean check = Character.isDigit(quan.charAt(i));
                if (!check) {
                    showMess("Quantity must be a number and greater than 0!!!");
                    break;
                }
            }

        } else {
            String quan = txtOQuantity.getText();
            for (int i = 0; i < quan.length(); i++) {
                boolean check = Character.isDigit(quan.charAt(i));
                if (!check) {
                    showMess("Quantity must be a number and greater than 0!!!");
                    break;
                }
            }
        }
    }

    private void delete() {
        int result = JOptionPane.showConfirmDialog(
                this,
                "Do you want delete?", "Delete?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );
        if (result == JOptionPane.YES_OPTION) {
            Fruit f = fruitsList.get(currentRow);
            if (f.getQuantity() > 0) {
                JOptionPane.showMessageDialog(this, "Quantity is not zoro, so you can not delete!!");
            } else {
                fruitsList.remove(f);
            }
        }
    }

    private void addHistory(boolean b) {
        int ID = 1;

        for (History history : historyList) {
            ID++;
        }
        if (b) {
            String name = txtIName.getText();
            Double quan = Double.parseDouble(txtIQuantity.getText());
            int total = Integer.parseInt(txtITotal.getText());
            String status = "In";
            String Date = java.time.LocalDate.now().toString();

            History h = new History(ID, name, quan, total, status, Date);
            historyList.add(h);

        } else {

            String name = txtOName.getText();
            Double quan = Double.parseDouble(txtOQuantity.getText());
            int outPrice = getPrice(name);
            int total = (int) (outPrice * quan);
            txtOPrice.setText(String.valueOf(outPrice));
            txtOTotal.setText(String.valueOf(total));
            String status = "Out";
            String Date = java.time.LocalDate.now().toString();
            boolean temp = false;

            for (Fruit f : fruitsList) {
                if (f.getName().equals(name)) {

                    f.setQuantity(f.getQuantity() - quan);
                    temp = true;
                } else {
                    temp = false;
                }
            }
            if (temp) {
                History h = new History(ID, name, quan, total, status, Date);
                historyList.add(h);
            } else {
                showMess("The fruit is not enough in store");

            }
        }
    }

    private int getPrice(String name) {
        for (Fruit fruit : fruitsList) {
            if (name.equals(fruit.getName())) {
                return fruit.getOutPrice();
            }
        }
        return 0;
    }

    private void updatePrice() {
        Fruit f = fruitsList.get(currentRow);
        f.setName(txtIName.getText());
        f.setQuantity(Double.parseDouble(txtIQuantity.getText()));
        f.setInPrice(Integer.parseInt(txtIPrice.getText()));
        f.setOutPrice(Integer.parseInt(txtSellingPrice.getText()));

    }

    private void showDetail(int r) {
        String name = (String) tbFruits.getValueAt(r, 0);
        txtIName.setText(name);
        String quan = tbFruits.getValueAt(r, 1).toString();
        txtIQuantity.setText(quan);
        String inPrice = tbFruits.getValueAt(r, 2).toString();
        txtIPrice.setText(inPrice);
        String outPrice = tbFruits.getValueAt(r, 3).toString();
        txtSellingPrice.setText(outPrice);

    }

    private void addFruit() {

        String name = txtIName.getText();
        Double quan = Double.parseDouble(txtIQuantity.getText());
        int inPrice = Integer.parseInt(txtIPrice.getText());
        int outPrice = inPrice + 200;
        Fruit fruit = new Fruit();
        Fruit fTemp = new Fruit();
        boolean b = false;

        if (XFile.readObject(filePath) == null) {
            Fruit fr = new Fruit(name, quan, inPrice, outPrice);
            fruitsList.add(fr);
        } else {
            for (Fruit f : fruitsList) {
                if (name.equals(f.getName())) {
                    f.setQuantity(f.getQuantity() + quan);
                    b = false;
                } else {
                    fruit.setName(name);
                    fruit.setInPrice(inPrice);
                    fruit.setOutPrice(outPrice);
                    fruit.setQuantity(quan);
                    b = true;
                }
            }
            if (b) {
                fruitsList.add(fruit);
            }

        }

        int total = (int) (inPrice * quan);
        txtITotal.setText(String.valueOf(total));
        txtSellingPrice.setText(String.valueOf(outPrice));

    }

    private void showMess(String mess) {
        JOptionPane.showMessageDialog(this, mess);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnIClrear;
    private javax.swing.JButton btnIData;
    private javax.swing.JButton btnIn;
    private javax.swing.JButton btnOClear;
    private javax.swing.JButton btnOData;
    private javax.swing.JButton btnOut;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel containPanel;
    private javax.swing.JPanel in;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel out;
    private javax.swing.JTable tbFruits;
    private javax.swing.JTable tbHistory;
    private javax.swing.JTextField txtIName;
    private javax.swing.JTextField txtIPrice;
    private javax.swing.JTextField txtIQuantity;
    private javax.swing.JTextField txtITotal;
    private javax.swing.JTextField txtOName;
    private javax.swing.JTextField txtOPrice;
    private javax.swing.JTextField txtOQuantity;
    private javax.swing.JTextField txtOTotal;
    private javax.swing.JTextField txtSellingPrice;
    // End of variables declaration//GEN-END:variables
}
